{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "defaultValue": "Demo",
            "metadata": {
                "description": "Prod, Dev, Test, PoC, and Demo"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "The location of the resource group"
            }
        },
        "resourceTags": {
            "type": "object",
            "defaultValue": {
                "key": "value"
            },
            "metadata": {
                "description": "Tags value pairs which get associated with the resource group"
            }
        },
        "RBAC": {
            "type": "array",
            "metadata": {
                "description": "An object of resource group RBAC assignments"
            }
        }
    },
    "variables": {
        "resourceGroupPrefix": "[concat('RG-', toUpper(parameters('environment')))]",
        "resourceGroupName": "[concat(variables('resourceGroupPrefix'), '-MANAGEMENT-', replace(toUpper(parameters('location')), ' ', ''))]",
        "rgPolicyScope": "[tenantResourceId('Microsoft.Resources/resourceGroups', variables('resourceGroupName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2019-10-01",
            "name": "[variables('resourceGroupName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('resourceTags')]"
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-10-01-preview",
            "name": "[guid(subscription().id, parameters('RBAC')[copyIndex('RBAC')].principalId, parameters('RBAC')[copyIndex('RBAC')].roleId)]",
            "copy": {
                "name": "RBAC",
                "count": "[length(parameters('RBAC'))]"
            },
            "properties": {
                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('RBAC')[copyIndex('RBAC')].roleId)]",
                "principalId": "[parameters('RBAC')[copyIndex('RBAC')].principalId]",
                "scope": "[subscription().id]"
            }
        },
        {
            "type": "Microsoft.Authorization/policyDefinitions",
            "apiVersion": "2019-09-01",
            "name": "ResourceGroupLocation",
            "properties": {
                "policyType": "Custom",
                "mode": "All",
                "parameters":{

                },
                "policyRule": {
                    "if": {
                        "not": {
                            "field": "location",
                            "in": "[parameters('location')]"
                        }
                    },
                    "then": {
                        "effect": "deny"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2020-09-01",
            "name": "LockResourceGroupResourcesToLocation",
            "location": "[parameters('location')]",
            "properties": {
                "displayName": "Lock the resources within the resource group to the resource group location",
                "policyDefinitionId": "[extensionResourceId(variables('rgPolicyScope'), 'Microsoft.Authorization/policyDefinitions', 'ResourceGroupLocation')]"
            }
        }
    ],
    "outputs": {
        "resourceGroup_Id": {
            "type": "string",
            "value": "[resourceId('Microsoft.Resources/resourceGroups', concat(variables('resourceGroupPrefix'), '-MANAGEMENT-', replace(toUpper(parameters('location')), ' ', '')))]"
        },
        "resourceGroup_Name": {
            "type": "string",
            "value": "[concat(variables('resourceGroupPrefix'), '-MANAGEMENT-', replace(toUpper(parameters('location')), ' ', ''))]"
        }
    }
}