{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location of the resource; inherits the resource group configuration."
            }
        },
        "logAnalyticsWorkspace_Id":{
            "type": "string",
            "metadata": {
                "description": "The workspace, key vault will use for diagnostic logging"
            }
        }
    },
    "variables": {
        "logAnalyticsWorkspaceName": "[split(parameters('logAnalyticsWorkspace_Id'), '/')[8]]",
        "LogAnalyticsInsights": {
            "AzureBackupInsights": {
                "name": "AzureBackupMonitoringSolution",
                "solutionName": "[concat('AzureBackup[', variables('logAnalyticsWorkspaceName'), ']')]",
                "publisher": "Microsoft",
                "displayName": "Azure Backup Monitoring Solution",
                "description": "Monitor and analyze your Backup Vaults",
                "author": "Microsoft"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces/views",
            "apiVersion": "2015-11-01-preview",
            "name": "[concat(variables('logAnalyticsWorkspaceName'), '/', variables('LogAnalyticsInsights').AzureBackupInsights.name)]",
            "location": "[parameters('location')]",
            "properties": {
                "Name": "[variables('LogAnalyticsInsights').AzureBackupInsights.name]",
                "Author": "[variables('LogAnalyticsInsights').AzureBackupInsights.author]",
                "Source": "Local",
                "Version": 2,
                "Dashboard": [
                    {
                        "Id": "SingleQueryDonutBuilderBladeV1",
                        "Type": "Blade",
                        "Version": 0,
                        "Configuration": {
                            "General": {
                                "title": "Backup Jobs Breakdown (Non Log)",
                                "newGroup": false,
                                "icon": "",
                                "useIcon": false
                            },
                            "Header": {
                                "Title": "Backup Jobs Breakdown (Non Log)",
                                "Subtitle": ""
                            },
                            "Donut": {
                                "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s != \"Log\" and JobOperationSubType_s != \"Recovery point_Log\" | summarize AggregatedValue = dcount(JobUniqueId_g) by JobStatus_s | order by AggregatedValue desc",
                                "CenterLegend": {
                                    "Text": "Total",
                                    "Operation": "Sum",
                                    "ArcsToSelect": []
                                },
                                "Options": {
                                    "colors": [
                                        "#55d455",
                                        "#ba141a",
                                        "#00bcf2"
                                    ],
                                    "valueColorMapping": [
                                        {
                                            "value": "Completed",
                                            "color": "#55d455"
                                        },
                                        {
                                            "value": "Failed",
                                            "color": "#ba141a"
                                        }
                                    ]
                                },
                                "NavigationSelect": {}
                            },
                            "List": {
                                "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" and JobOperation_s == \"Backup\" and JobStatus_s == \"Failed\" and JobOperationSubType_s != \"Log\" and JobOperationSubType_s != \"Recovery point_Log\" | distinct JobUniqueId_g, BackupItemUniqueId_s, JobStatus_s, Resource | project BackupItemUniqueId_s, JobStatus_s, Resource | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s ) on BackupItemUniqueId_s | project BackupItemFriendlyName_s, BackupItemUniqueId_s, JobStatus_s, Resource | extend Vault= Resource | summarize count() by BackupItemFriendlyName_s, JobStatus_s, Vault, BackupItemUniqueId_s  | order by count_ desc",
                                "HideGraph": true,
                                "enableSparklines": false,
                                "operation": "Summary",
                                "ColumnsTitle": {
                                    "Name": "Data Sources",
                                    "Value": "Count"
                                },
                                "Color": "#0072c6",
                                "thresholds": {
                                    "isEnabled": false,
                                    "values": [
                                        {
                                            "name": "Normal",
                                            "threshold": "Default",
                                            "color": "#009e49",
                                            "isDefault": true
                                        },
                                        {
                                            "name": "Warning",
                                            "threshold": "60",
                                            "color": "#fcd116",
                                            "isDefault": false
                                        },
                                        {
                                            "name": "Error",
                                            "threshold": "90",
                                            "color": "#ba141a",
                                            "isDefault": false
                                        }
                                    ]
                                },
                                "NameDSVSeparator": "",
                                "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" and JobOperation_s == \"Backup\" and JobStatus_s == \"Failed\" and JobOperationSubType_s != \"Log\" and JobOperationSubType_s != \"Recovery point_Log\" | distinct JobUniqueId_g, BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | project BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s, RecommendedAction_s  | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s, BackupItemUniqueId_s , ProtectedContainerFriendlyName_s, BackupItemType_s, JobStatus_s, Resource, JobFailureCode_s | extend Vault= Resource | where {selected item}",
                                "NavigationSelect": {
                                    "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" and JobOperation_s == \"Backup\" and JobStatus_s == \"Failed\" and JobOperationSubType_s != \"Log\" and JobOperationSubType_s != \"Recovery point_Log\" | distinct JobUniqueId_g, BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | project BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s, RecommendedAction_s  | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s, BackupItemUniqueId_s , ProtectedContainerFriendlyName_s, BackupItemType_s, JobStatus_s, Resource, JobFailureCode_s | extend Vault= Resource | where {selected item}"
                                }
                            }
                        }
                    },
                    {
                        "Id": "SingleQueryDonutBuilderBladeV1",
                        "Type": "Blade",
                        "Version": 0,
                        "Configuration": {
                            "General": {
                                "title": "Backup Jobs BreakDown (Log)",
                                "newGroup": false,
                                "icon": "",
                                "useIcon": false
                            },
                            "Header": {
                                "Title": "Backup Jobs Breakdown (Log)",
                                "Subtitle": ""
                            },
                            "Donut": {
                                "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and (JobOperationSubType_s == \"Log\" or JobOperationSubType_s == \"Recovery point_Log\") | summarize AggregatedValue = dcount(JobUniqueId_g) by JobStatus_s | order by AggregatedValue desc",
                                "CenterLegend": {
                                    "Text": "Total",
                                    "Operation": "Sum",
                                    "ArcsToSelect": []
                                },
                                "Options": {
                                    "colors": [
                                        "#00188f",
                                        "#0072c6",
                                        "#00bcf2"
                                    ],
                                    "valueColorMapping": [
                                        {
                                            "value": "Completed",
                                            "color": "#55d455"
                                        },
                                        {
                                            "value": "Failed",
                                            "color": "#dd5900"
                                        }
                                    ]
                                },
                                "NavigationSelect": {}
                            },
                            "List": {
                                "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" and JobOperation_s == \"Backup\" and JobStatus_s == \"Failed\" and (JobOperationSubType_s == \"Log\" or JobOperationSubType_s == \"Recovery point_Log\") | project BackupItemUniqueId_s, JobStatus_s, Resource | join kind=inner (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s ) on BackupItemUniqueId_s | project BackupItemFriendlyName_s , JobStatus_s, Resource | extend Vault= Resource | summarize count() by BackupItemFriendlyName_s, JobStatus_s, Vault | order by count_ desc",
                                "HideGraph": true,
                                "enableSparklines": false,
                                "operation": "Summary",
                                "ColumnsTitle": {
                                    "Name": "Datasources",
                                    "Value": "Count"
                                },
                                "Color": "#0072c6",
                                "thresholds": {
                                    "isEnabled": false,
                                    "values": [
                                        {
                                            "name": "Normal",
                                            "threshold": "Default",
                                            "color": "#009e49",
                                            "isDefault": true
                                        },
                                        {
                                            "name": "Warning",
                                            "threshold": "60",
                                            "color": "#fcd116",
                                            "isDefault": false
                                        },
                                        {
                                            "name": "Error",
                                            "threshold": "90",
                                            "color": "#ba141a",
                                            "isDefault": false
                                        }
                                    ]
                                },
                                "NameDSVSeparator": "",
                                "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" and JobOperation_s == \"Backup\" and JobStatus_s == \"Failed\" and (JobOperationSubType_s == \"Log\" or JobOperationSubType_s == \"Recovery point_Log\") | project BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | join kind=inner (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s, BackupItemUniqueId_s, ProtectedContainerFriendlyName_s, BackupItemType_s, JobStatus_s, Resource, JobFailureCode_s | extend Vault= Resource | where {selected item}",
                                "NavigationSelect": {
                                    "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where OperationName == \"Job\" and JobOperation_s == \"Backup\" and JobStatus_s == \"Failed\" and (JobOperationSubType_s == \"Log\" or JobOperationSubType_s == \"Recovery point_Log\") | project BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | join kind=inner (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s, BackupItemUniqueId_s, ProtectedContainerFriendlyName_s, BackupItemType_s, JobStatus_s, Resource, JobFailureCode_s | extend Vault= Resource | where {selected item}"
                                }
                            }
                        }
                    },
                    {
                        "Id": "SingleQueryDonutBuilderBladeV1",
                        "Type": "Blade",
                        "Version": 0,
                        "Configuration": {
                            "General": {
                                "title": "Restore Jobs Breakdown",
                                "newGroup": false,
                                "icon": "",
                                "useIcon": false
                            },
                            "Header": {
                                "Title": "Restore Jobs Breakdown",
                                "Subtitle": ""
                            },
                            "Donut": {
                                "Query": "AzureDiagnostics  | where Category == \"AzureBackupReport\"      | where OperationName == \"Job\"     | where JobOperation_s == \"Restore\"  or JobOperation_s == \"Recovery\"    | summarize AggregatedValue = dcount(JobUniqueId_g) by JobStatus_s  | order by AggregatedValue desc",
                                "CenterLegend": {
                                    "Text": "Total",
                                    "Operation": "Sum",
                                    "ArcsToSelect": []
                                },
                                "Options": {
                                    "colors": [
                                        "#007233",
                                        "#ba141a",
                                        "#00bcf2"
                                    ],
                                    "valueColorMapping": [
                                        {
                                            "value": "Cancelled",
                                            "color": "#fff100"
                                        },
                                        {
                                            "value": "Completed",
                                            "color": "#007233"
                                        },
                                        {
                                            "value": "Failed",
                                            "color": "#ba141a"
                                        }
                                    ]
                                },
                                "NavigationSelect": {}
                            },
                            "List": {
                                "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | where OperationName == \"Job\" and JobOperation_s == \"Restore\" or JobOperation_s == \"Recovery\" and JobStatus_s == \"Failed\" | distinct JobUniqueId_g, BackupItemUniqueId_s, JobStatus_s, Resource | project BackupItemUniqueId_s, JobStatus_s, Resource | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s ) on BackupItemUniqueId_s | project BackupItemFriendlyName_s, BackupItemUniqueId_s, JobStatus_s, Resource | extend Vault= Resource | summarize count() by BackupItemFriendlyName_s, BackupItemUniqueId_s , JobStatus_s, Vault | order by count_ desc",
                                "HideGraph": true,
                                "enableSparklines": false,
                                "operation": "Summary",
                                "ColumnsTitle": {
                                    "Name": "Data Sources",
                                    "Value": "Count"
                                },
                                "Color": "#0072c6",
                                "thresholds": {
                                    "isEnabled": false,
                                    "values": [
                                        {
                                            "name": "Normal",
                                            "threshold": "Default",
                                            "color": "#009e49",
                                            "isDefault": true
                                        },
                                        {
                                            "name": "Warning",
                                            "threshold": "60",
                                            "color": "#fcd116",
                                            "isDefault": false
                                        },
                                        {
                                            "name": "Error",
                                            "threshold": "90",
                                            "color": "#ba141a",
                                            "isDefault": false
                                        }
                                    ]
                                },
                                "NameDSVSeparator": "",
                                "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | where OperationName == \"Job\" and JobOperation_s == \"Restore\" or JobOperation_s == \"Recovery\" and JobStatus_s == \"Failed\" | distinct JobUniqueId_g, BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | project BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s, BackupItemUniqueId_s, ProtectedContainerFriendlyName_s, BackupItemType_s, JobStatus_s, Resource, JobFailureCode_s | extend Vault= Resource  | where {selected item}",
                                "NavigationSelect": {
                                    "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\" ; Events | where OperationName == \"Job\" and JobOperation_s == \"Restore\" or JobOperation_s == \"Recovery\" and JobStatus_s == \"Failed\" | distinct JobUniqueId_g, BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | project BackupItemUniqueId_s, ProtectedContainerUniqueId_s, JobStatus_s, Resource, JobFailureCode_s | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s     | project BackupItemUniqueId_s , BackupItemFriendlyName_s, BackupItemName_s, BackupItemType_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s, BackupItemUniqueId_s, ProtectedContainerFriendlyName_s, BackupItemType_s, JobStatus_s, Resource, JobFailureCode_s | extend Vault= Resource  | where {selected item}"
                                }
                            }
                        }
                    },
                    {
                        "Id": "SingleQueryDonutBuilderBladeV1",
                        "Type": "Blade",
                        "Version": 0,
                        "Configuration": {
                            "General": {
                                "title": "Alerts from Azure Resources Backup",
                                "newGroup": false,
                                "icon": "",
                                "useIcon": false
                            },
                            "Header": {
                                "Title": "Active Alert Distribution ",
                                "Subtitle": ""
                            },
                            "Donut": {
                                "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Alert\" | where AlertUniqueId_s != \"\" | summarize arg_max(TimeGenerated, *) by AlertUniqueId_s  | extend CurrentStatus = AlertStatus_s  | join  (AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_s ) on AlertUniqueId_s  | project AlertUniqueId_s, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s | where CurrentStatus == \"Active\" | summarize count() by AlertSeverity_s",
                                "CenterLegend": {
                                    "Text": "Total",
                                    "Operation": "Sum",
                                    "ArcsToSelect": []
                                },
                                "Options": {
                                    "colors": [
                                        "#e81123",
                                        "#008272",
                                        "#00bcf2"
                                    ],
                                    "valueColorMapping": [
                                        {
                                            "value": "Critical",
                                            "color": "#e81123"
                                        },
                                        {
                                            "value": "Warning",
                                            "color": "#fff100"
                                        },
                                        {
                                            "value": "Information",
                                            "color": "#55d455"
                                        }
                                    ]
                                },
                                "NavigationSelect": {}
                            },
                            "List": {
                                "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"Alert\" | where AlertUniqueId_s != \"\" | summarize lastOccurred = arg_max(TimeGenerated, *) by AlertUniqueId_s  | extend CurrentStatus = AlertStatus_s  | join  (Events | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_s ) on AlertUniqueId_s  | project AlertUniqueId_s, lastOccurred, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s, BackupItemUniqueId_s, RecommendedAction_s | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s     | project BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s ) on BackupItemUniqueId_s | project BackupItemName_s, AlertCode_s, HitCount | order by HitCount desc",
                                "HideGraph": true,
                                "enableSparklines": false,
                                "operation": "Summary",
                                "ColumnsTitle": {
                                    "Name": "Data Sources",
                                    "Value": "HitCount"
                                },
                                "Color": "#0072c6",
                                "thresholds": {
                                    "isEnabled": false,
                                    "values": [
                                        {
                                            "name": "Normal",
                                            "threshold": "Default",
                                            "color": "#009e49",
                                            "isDefault": true
                                        },
                                        {
                                            "name": "Warning",
                                            "threshold": "60",
                                            "color": "#fcd116",
                                            "isDefault": false
                                        },
                                        {
                                            "name": "Error",
                                            "threshold": "90",
                                            "color": "#ba141a",
                                            "isDefault": false
                                        }
                                    ]
                                },
                                "NameDSVSeparator": "",
                                "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"Alert\" | where AlertUniqueId_s != \"\" | summarize lastOccurred = arg_max(TimeGenerated, *) by AlertUniqueId_s  | extend CurrentStatus = AlertStatus_s  | join  (Events | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_s ) on AlertUniqueId_s  | project AlertUniqueId_s, lastOccurred, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s, BackupItemUniqueId_s, RecommendedAction_s, Resource | join kind=inner (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s     | project BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s ) on BackupItemUniqueId_s | project AlertCode_s, lastOccurred, BackupItemName_s, CurrentStatus, AlertSeverity_s, HitCount, RecommendedAction_s, Resource | extend Vault= Resource | where {selected item}",
                                "NavigationSelect": {
                                    "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"Alert\" | where AlertUniqueId_s != \"\" | summarize lastOccurred = arg_max(TimeGenerated, *) by AlertUniqueId_s  | extend CurrentStatus = AlertStatus_s  | join  (Events | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_s ) on AlertUniqueId_s  | project AlertUniqueId_s, lastOccurred, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s, BackupItemUniqueId_s, RecommendedAction_s, Resource | join kind=inner (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s     | project BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s ) on BackupItemUniqueId_s | project AlertCode_s, lastOccurred, BackupItemName_s, CurrentStatus, AlertSeverity_s, HitCount, RecommendedAction_s, Resource | extend Vault= Resource | where {selected item}"
                                }
                            }
                        }
                    },
                    {
                        "Id": "SingleQueryDonutBuilderBladeV1",
                        "Type": "Blade",
                        "Version": 0,
                        "Configuration": {
                            "General": {
                                "title": "Alerts from On-prem backup",
                                "newGroup": false,
                                "icon": "",
                                "useIcon": false
                            },
                            "Header": {
                                "Title": "Active Alert distribution",
                                "Subtitle": ""
                            },
                            "Donut": {
                                "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Alert\" | where AlertUniqueId_g != \"\"  | summarize arg_max(TimeGenerated, *) by AlertUniqueId_g  | extend CurrentStatus = AlertStatus_s  | join kind= inner (AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_g ) on AlertUniqueId_g | project AlertUniqueId_g, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s | where CurrentStatus == \"Active\" | summarize count() by AlertSeverity_s",
                                "CenterLegend": {
                                    "Text": "Total",
                                    "Operation": "Sum",
                                    "ArcsToSelect": []
                                },
                                "Options": {
                                    "colors": [
                                        "#00188f",
                                        "#0072c6",
                                        "#00bcf2"
                                    ],
                                    "valueColorMapping": [
                                        {
                                            "value": "Critical",
                                            "color": "#ba141a"
                                        },
                                        {
                                            "value": "Warning",
                                            "color": "#ffb900"
                                        },
                                        {
                                            "value": "Information",
                                            "color": "#55d455"
                                        }
                                    ]
                                },
                                "NavigationSelect": {}
                            },
                            "List": {
                                "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"Alert\" | where AlertUniqueId_g != \"\" | summarize lastOccurred = arg_max(TimeGenerated, *) by AlertUniqueId_g  | extend CurrentStatus = AlertStatus_s  | join  (Events | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_g ) on AlertUniqueId_g  | project AlertUniqueId_g, lastOccurred, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s, BackupItemUniqueId_s, RecommendedAction_s | where CurrentStatus == \"Active\" | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s     | project BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s ) on BackupItemUniqueId_s | project BackupItemName_s, AlertCode_s, HitCount | order by HitCount desc",
                                "HideGraph": false,
                                "enableSparklines": false,
                                "operation": "Summary",
                                "ColumnsTitle": {
                                    "Name": "Computer",
                                    "Value": "Count"
                                },
                                "Color": "#0072c6",
                                "thresholds": {
                                    "isEnabled": false,
                                    "values": [
                                        {
                                            "name": "Normal",
                                            "threshold": "Default",
                                            "color": "#009e49",
                                            "isDefault": true
                                        },
                                        {
                                            "name": "Warning",
                                            "threshold": "60",
                                            "color": "#fcd116",
                                            "isDefault": false
                                        },
                                        {
                                            "name": "Error",
                                            "threshold": "90",
                                            "color": "#ba141a",
                                            "isDefault": false
                                        }
                                    ]
                                },
                                "NameDSVSeparator": "",
                                "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"Alert\" | where AlertUniqueId_g != \"\"  | summarize lastOccurred = arg_max(TimeGenerated, *) by AlertUniqueId_g  | extend CurrentStatus = AlertStatus_s  | join kind=inner  (Events | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_g ) on AlertUniqueId_g  | project AlertUniqueId_g, BackupManagementServerUniqueId_s, ProtectedContainerUniqueId_s ,lastOccurred, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s, BackupItemUniqueId_s, RecommendedAction_s, Resource | where CurrentStatus == \"Active\" | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s     | project BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | join kind=leftouter( Events     | where OperationName == \"BackupManagementServer\"     | distinct BackupManagmentServerUniqueId_s, BackupManagmentServerName_s     | project BackupManagmentServerUniqueId_s, BackupManagmentServerName_s ) on $left.BackupManagementServerUniqueId_s == $right.BackupManagmentServerUniqueId_s | project AlertCode_s, lastOccurred, BackupItemName_s, ProtectedContainerFriendlyName_s, BackupManagmentServerName_s, CurrentStatus, AlertSeverity_s, HitCount, RecommendedAction_s, Resource | extend Vault= Resource | project-away Resource | where {selected item}",
                                "NavigationSelect": {
                                    "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"Alert\" | where AlertUniqueId_g != \"\"  | summarize lastOccurred = arg_max(TimeGenerated, *) by AlertUniqueId_g  | extend CurrentStatus = AlertStatus_s  | join kind=inner  (Events | where OperationName == \"Alert\" | where AlertStatus_s == \"Active\" | summarize HitCount = count() by AlertUniqueId_g ) on AlertUniqueId_g  | project AlertUniqueId_g, BackupManagementServerUniqueId_s, ProtectedContainerUniqueId_s ,lastOccurred, HitCount , CurrentStatus , AlertCode_s, AlertSeverity_s, BackupItemUniqueId_s, RecommendedAction_s, Resource | where CurrentStatus == \"Active\" | join kind=leftouter (     Events     | where OperationName == \"BackupItem\"     | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s     | project BackupItemUniqueId_s, BackupItemFriendlyName_s, BackupItemName_s ) on BackupItemUniqueId_s | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | join kind=leftouter( Events     | where OperationName == \"BackupManagementServer\"     | distinct BackupManagmentServerUniqueId_s, BackupManagmentServerName_s     | project BackupManagmentServerUniqueId_s, BackupManagmentServerName_s ) on $left.BackupManagementServerUniqueId_s == $right.BackupManagmentServerUniqueId_s | project AlertCode_s, lastOccurred, BackupItemName_s, ProtectedContainerFriendlyName_s, BackupManagmentServerName_s, CurrentStatus, AlertSeverity_s, HitCount, RecommendedAction_s, Resource | extend Vault= Resource | project-away Resource | where {selected item}"
                                }
                            }
                        }
                    },
                    {
                        "Id": "SingleQueryDonutBuilderBladeV1",
                        "Type": "Blade",
                        "Version": 0,
                        "Configuration": {
                            "General": {
                                "title": "Active Datasources Protected",
                                "newGroup": false,
                                "icon": "",
                                "useIcon": false
                            },
                            "Header": {
                                "Title": "Last known Protection status",
                                "Subtitle": ""
                            },
                            "Donut": {
                                "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"BackupItem\" | where BackupItemProtectionState_s != \"\"  | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s, BackupItemProtectionState_s | summarize dcount(BackupItemUniqueId_s) by BackupItemProtectionState_s",
                                "CenterLegend": {
                                    "Text": "Total",
                                    "Operation": "Sum",
                                    "ArcsToSelect": []
                                },
                                "Options": {
                                    "colors": [
                                        "#ff8c00",
                                        "#55d455",
                                        "#6dc2e9"
                                    ],
                                    "valueColorMapping": []
                                },
                                "NavigationSelect": {}
                            },
                            "List": {
                                "Query": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"BackupItem\" | where BackupItemProtectionState_s != \"\"  | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s ,BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s, BackupItemUniqueId_s | summarize dcount(BackupItemUniqueId_s) by BackupManagementType_s,BackupItemProtectionState_s | order by BackupManagementType_s desc",
                                "HideGraph": true,
                                "enableSparklines": false,
                                "operation": "Summary",
                                "ColumnsTitle": {
                                    "Name": "BackupManagement Type",
                                    "Value": "BackupItems"
                                },
                                "Color": "#ff8c00",
                                "thresholds": {
                                    "isEnabled": false,
                                    "values": [
                                        {
                                            "name": "Normal",
                                            "threshold": "Default",
                                            "color": "#009e49",
                                            "isDefault": true
                                        },
                                        {
                                            "name": "Warning",
                                            "threshold": "60",
                                            "color": "#fcd116",
                                            "isDefault": false
                                        },
                                        {
                                            "name": "Error",
                                            "threshold": "90",
                                            "color": "#ba141a",
                                            "isDefault": false
                                        }
                                    ]
                                },
                                "NameDSVSeparator": "",
                                "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"BackupItem\" | where BackupItemProtectionState_s != \"\"  | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s ,BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s, BackupItemUniqueId_s, ProtectedContainerUniqueId_s, Resource | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s ,BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s, BackupItemUniqueId_s, ProtectedContainerFriendlyName_s, Resource | extend Vault= Resource | project-away Resource | where {selected item}",
                                "NavigationSelect": {
                                    "NavigationQuery": "let Events = AzureDiagnostics | where Category == \"AzureBackupReport\"; Events | where OperationName == \"BackupItem\" | where BackupItemProtectionState_s != \"\"  | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s ,BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s, BackupItemUniqueId_s, ProtectedContainerUniqueId_s, Resource | join kind=leftouter (     Events     | where OperationName == \"ProtectedContainer\"     | distinct ProtectedContainerUniqueId_s, ProtectedContainerFriendlyName_s     | project ProtectedContainerUniqueId_s , ProtectedContainerFriendlyName_s ) on ProtectedContainerUniqueId_s | project BackupItemFriendlyName_s, BackupItemName_s ,BackupItemType_s, BackupManagementType_s, BackupItemProtectionState_s, BackupItemUniqueId_s, ProtectedContainerFriendlyName_s, Resource | extend Vault= Resource | project-away Resource | where {selected item}"
                                }
                            }
                        }
                    },
                    {
                        "Id": "LineChartBuilderBlade",
                        "Type": "Blade",
                        "Version": 0,
                        "Configuration": {
                            "General": {
                                "title": "Cloud Storage in GB",
                                "newGroup": false,
                                "icon": "",
                                "useIcon": false
                            },
                            "Header": {
                                "Title": "Cloud storage in GB",
                                "Subtitle": ""
                            },
                            "LineChart": {
                                "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend CloudStorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project CloudStorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner (    AzureDiagnostics    | where Category == \"AzureBackupReport\"    | where OperationName == \"Storage\"    | distinct StorageUniqueId_s, StorageType_s    | project StorageUniqueId_s, StorageType_s  ) on StorageUniqueId_s | where StorageType_s == \"Cloud\" | summarize dayCharge = avg(CloudStorageInGB)  by BackupItemUniqueId_s, bin(TimeGenerated, 1d) | summarize TotalCharge = sum(dayCharge) by bin(TimeGenerated, 1d)",
                                "yAxis": {
                                    "isLogarithmic": false,
                                    "units": {
                                        "baseUnitType": "",
                                        "baseUnit": "",
                                        "displayUnit": ""
                                    },
                                    "customLabel": "Cloud Storage (GB)"
                                },
                                "NavigationSelect": {}
                            },
                            "List": {
                                "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | summarize arg_max(TimeGenerated, *) by BackupItemUniqueId_s, StorageUniqueId_s | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s | join kind=inner (    AzureDiagnostics    | where Category == \"AzureBackupReport\"    | where OperationName == \"Storage\"    | distinct StorageUniqueId_s, StorageType_s    | project StorageUniqueId_s, StorageType_s  ) on StorageUniqueId_s | project StorageInGB, BackupItemUniqueId_s, StorageType_s | join kind=leftouter (    AzureDiagnostics    | where Category == \"AzureBackupReport\"    | where OperationName == \"BackupItem\"    | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s    | project BackupItemUniqueId_s, BackupItemFriendlyName_s ) on BackupItemUniqueId_s | project StorageInGB, BackupItemFriendlyName_s, BackupItemUniqueId_s, StorageType_s | where StorageType_s == \"Cloud\" | order by StorageInGB desc",
                                "HideGraph": false,
                                "enableSparklines": false,
                                "operation": "Summary",
                                "ColumnsTitle": {
                                    "Name": "Data Sources",
                                    "Value": "Cloud Data in GB"
                                },
                                "Color": "#eb3c00",
                                "thresholds": {
                                    "isEnabled": false,
                                    "values": [
                                        {
                                            "name": "Normal",
                                            "threshold": "Default",
                                            "color": "#009e49",
                                            "isDefault": true
                                        },
                                        {
                                            "name": "Warning",
                                            "threshold": "60",
                                            "color": "#fcd116",
                                            "isDefault": false
                                        },
                                        {
                                            "name": "Error",
                                            "threshold": "90",
                                            "color": "#ba141a",
                                            "isDefault": false
                                        }
                                    ]
                                },
                                "NameDSVSeparator": "",
                                "NavigationQuery": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner (    AzureDiagnostics    | where Category == \"AzureBackupReport\"    | where OperationName == \"Storage\"    | distinct StorageUniqueId_s, StorageType_s    | project StorageUniqueId_s, StorageType_s  ) on StorageUniqueId_s | where StorageType_s == \"Cloud\"    | project StorageInGB, BackupItemUniqueId_s, StorageType_s, TimeGenerated | join kind=leftouter (    AzureDiagnostics    | where Category == \"AzureBackupReport\"    | where OperationName == \"BackupItem\"    | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s    | project BackupItemUniqueId_s, BackupItemFriendlyName_s ) on BackupItemUniqueId_s | project StorageInGB, BackupItemFriendlyName_s, BackupItemUniqueId_s, StorageType_s, TimeGenerated | where {selected item} | summarize dayCharge = avg(StorageInGB)  by BackupItemUniqueId_s, bin(TimeGenerated, 1d)",
                                "NavigationSelect": {
                                    "NavigationQuery": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"StorageAssociation\" | extend StorageInGB = todouble(StorageConsumedInMBs_s) / 1024 | project StorageInGB, BackupItemUniqueId_s, StorageUniqueId_s, TimeGenerated | join kind=inner (    AzureDiagnostics    | where Category == \"AzureBackupReport\"    | where OperationName == \"Storage\"    | distinct StorageUniqueId_s, StorageType_s    | project StorageUniqueId_s, StorageType_s  ) on StorageUniqueId_s | where StorageType_s == \"Cloud\"    | project StorageInGB, BackupItemUniqueId_s, StorageType_s, TimeGenerated | join kind=leftouter (    AzureDiagnostics    | where Category == \"AzureBackupReport\"    | where OperationName == \"BackupItem\"    | distinct BackupItemUniqueId_s, BackupItemFriendlyName_s    | project BackupItemUniqueId_s, BackupItemFriendlyName_s ) on BackupItemUniqueId_s | project StorageInGB, BackupItemFriendlyName_s, BackupItemUniqueId_s, StorageType_s, TimeGenerated | where {selected item} | summarize dayCharge = avg(StorageInGB)  by BackupItemUniqueId_s, bin(TimeGenerated, 1d)"
                                }
                            }
                        }
                    }
                ],
                "OverviewTile": {
                    "Id": "SingleQueryDonutBuilderTileV1",
                    "Type": "OverviewTile",
                    "Version": 2,
                    "Configuration": {
                        "Donut": {
                            "Query": "AzureDiagnostics | where Category == \"AzureBackupReport\" | where OperationName == \"Job\" | extend JobOperationSubType_s = columnifexists(\"JobOperationSubType_s\", \"\") | where JobOperation_s == \"Backup\" and JobOperationSubType_s != \"Log\" and JobOperationSubType_s != \"Recovery point_Log\" | summarize AggregatedValue = dcount(JobUniqueId_g) by JobStatus_s | order by AggregatedValue desc",
                            "CenterLegend": {
                                "Text": "Total",
                                "Operation": "Sum",
                                "ArcsToSelect": []
                            },
                            "Options": {
                                "colors": [
                                    "#55d455",
                                    "#e81123",
                                    "#00bcf2"
                                ],
                                "valueColorMapping": [
                                    {
                                        "value": "Completed",
                                        "color": "#55d455"
                                    },
                                    {
                                        "value": "Failed",
                                        "color": "#ba141a"
                                    }
                                ]
                            }
                        },
                        "Advanced": {
                            "DataFlowVerification": {
                                "Enabled": false,
                                "Query": "search * | limit 1 | project TimeGenerated",
                                "Message": ""
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.OperationsManagement/solutions",
            "apiVersion": "2015-11-01-preview",
            "name": "[variables('LogAnalyticsInsights').AzureBackupInsights.solutionName]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.OperationalInsights/workspaces/', variables('logAnalyticsWorkspaceName'), '/views/', variables('LogAnalyticsInsights').AzureBackupInsights.name)]"
            ],
            "plan": {
                "name": "[variables('LogAnalyticsInsights').AzureBackupInsights.solutionName]",
                "product": "[variables('LogAnalyticsInsights').AzureBackupInsights.name]",
                "publisher": "[variables('LogAnalyticsInsights').AzureBackupInsights.publisher]",
                "promotionCode": ""
            },
            "properties": {
                "workspaceResourceId": "[parameters('logAnalyticsWorkspace_Id')]",
                "referencedResources": [],
                "containedResources": [
                    "[resourceId('Microsoft.OperationalInsights/workspaces/views/', variables('logAnalyticsWorkspaceName'), variables('LogAnalyticsInsights').AzureBackupInsights.name)]"
                ]
            }
        }
    ],
    "outputs": {

    }
}
