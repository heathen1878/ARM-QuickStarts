{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "defaultValue": "Demo",
            "metadata": {
                "description": "Prod, Dev, Test, PoC, and Demo"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "usage": {
            "type": "string",
            "defaultValue": "General",
            "metadata": {
                "description": "Workload"
            }
        },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1
            ],
            "metadata": {
                "description": "Number of virtual machines to deploy - limited to 1 when data disks are deployed"
            }
        },
        "zones": {
            "type": "array",
            "defaultValue": [
                "1",
                "2"
            ],
            "metadata": {
                "description": "The availability zones are different datacenters within the region connected via a low latency link"
            }
        },
        "subnetId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The resource Id of the subnet where the hosts will reside"
            }
        },
        "subnetAddressPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The IP address prefix of the subnet; used for static addressing"
            }
        },
        "ipAllocation": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "metadata": {
                "description": "Defines whether the IP Address allocation should be dynamic or static. If static then the ipOffSet should be set too."
            }
        },
        "ipOffSet": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The offset is used to set the IP address used within the defined subnet prefix"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2ms",
            "metadata": {
                "description": "Standard B series are burstable and cheap for demonstration purposes"
            }
        },
        "vmSuffixOffSet": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Used to determine what the VM suffix should be e.g. -1 by default."
            }
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "metadata": {
                "description": "The options are: Standard_LRS, Premium_LRS, StandardSSD_LRS, UltraSSD_LRS"
            }
        },
        "dataDisks": {
            "type": "array",
            "defaultValue": [
                {
                    "DiskType": "Premium_LRS",
                    "DiskSize": 1
                }
            ],
            "metadata": {
                "description": "An array of data disks"
            }
        },
        "diagnosticsStorageAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the storage account where boot diagnostics will reside"
            }
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "metadata": {
                "description": "Enables Accelerated Networking feature, notice that VM size must support it, this is supported in most of general purpose and compute-optimized instances with 2 or more vCPUs, on instances that supports hyperthreading it is required minimum of 4 vCPUs."
            },
            "defaultValue": false
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "passed from the pipeline using Key Vault values"
            }
        },
        "adminPassword": {
            "type": "secureString",
            "defaultValue": "",
            "metadata": {
                "description": "passed from the pipeline using Key Vault values"
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer",
            "metadata": {
                "description": "Use Get-AzVMImagePublisher -Location 'Location' for a list of valid values"
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer",
            "metadata": {
                "description": "Use Get-AzVMImageOffer -Location 'Location' -PublisherName 'Value from Get-AzVMImagePublisher'"
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "metadata": {
                "description": "Use  Get-AzVMImageSku -Location 'Location' -PublisherName 'Value from Get-AzVMImagePublisher' -Offer 'Value from Get-AzVMImageOffer'"
            }
        },
        "licenceType": {
            "type": "string",
            "defaultValue": "Windows_Server",
            "allowedValues": [
                "Windows_Server",
                "Windows_Client"
            ],
            "metadata": {
                "description": "Either Windows_Server or Windows_Client"
            }
        },
        "logAnalyticsWorkspace_Id": {
            "type": "string",
            "metadata": {
                "description": "Resource Id of the Log Analytics Workspace"
            }
        },
        "windowsDefenderExclusionsExtensions": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A list of extensions to exlude separated by a semicolon"
            }
        },
        "windowsDefenderExclusionsPaths": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A list of paths to exlude separated by a semicolon"
            }
        },
        "windowsDefenderExclusionsProcesses": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A list of processes to exlude separated by a semicolon"
            }
        },
        "windowsDefenderRealTimeProtection": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Should Windows Defender Real time protection be configured? - default is yes"
            }
        },
        "windowsDefenderEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Should Windows Defender be enabled? - default is yes"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-08-01",
            "name": "[concat('NIC-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyIndex(parameters('vmSuffixOffSet')))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "NICs",
                "count": "[parameters('numberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "[parameters('ipAllocation')]",
                            "privateIPAddress": "[if(equals(parameters('ipAllocation'), 'Static'), json(concat('\"', concat(split(parameters('subnetAddressPrefix'), '.')[0], '.', split(parameters('subnetAddressPrefix'), '.')[1], '.', split(parameters('subnetAddressPrefix'), '.')[2], '.', copyIndex(parameters('ipOffSet'))), '\"')), json('null'))]",
                            "subnet": {
                                "id": "[parameters('subnetId')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-10-01",
            "name": "[concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet')))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachines",
                "count": "[parameters('numberOfInstances')]",
                "mode": "Serial"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', concat('NIC-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet'))))]"
            ],
            "zones": "[if(empty(parameters('zones')), json('null'), json(concat('[', parameters('zones')[copyIndex()], ']')))]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(toUpper(parameters('environment')), toUpper(parameters('usage')), copyindex(parameters('vmSuffixOffSet')))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVmAgent": true,
                        "timeZone": "GMT Standard Time"
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat('OSDISK-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet')))]",
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "copy": [
                        {
                            
                            "name": "dataDisks",
                            "count": "[length(parameters('dataDisks'))]",
                            "mode": "serial",
                            "input": {
                                "lun": "[copyIndex('dataDisks')]", 
                                "name": "[concat('DATA-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', parameters('vmSuffixOffSet'), '-' , copyindex('dataDisks',1))]", 
                                "createOption": "empty", 
                                "caching": "None", 
                                "diskSizeGB": "[parameters('dataDisks')[copyIndex('dataDisks')].DiskSize]", 
                                "managedDisk": {
                                    "storageAccountType": "[parameters('dataDisks')[copyIndex('dataDisks')].DiskType]"
                                }
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat('NIC-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet'))))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://', parameters('diagnosticsStorageAccountName'), '.blob.core.windows.net/')]"
                    }
                },
                "licenseType": "[parameters('licenceType')]"
            },
            "identity": {
                "type": "systemAssigned"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet')), '/NetworkWatcher')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachines",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet'))))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.NetworkWatcher",
                "type": "NetworkWatcherAgentWindows",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true
            }
        },
        {
             "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet')), '/WindowsDefender')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachines",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet'))), 'NetworkWatcher')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Security",
                "type": "IaaSAntimalware",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "AntimalwareEnabled": "[parameters('windowsDefenderEnabled')]",
                    "RealtimeProtectionEnabled": "[parameters('WindowsDefenderRealTimeProtection')]",
                    "Exclusions": {
                        "Extensions": "[if(empty(parameters('windowsDefenderExclusionsExtensions')), json('null'), parameters('windowsDefenderExclusionsExtensions'))]",
                        "Paths": "[if(empty(parameters('windowsDefenderExclusionsPaths')), json('null'), parameters('windowsDefenderExclusionsPaths'))]",
                        "Processes": "[if(empty(parameters('windowsDefenderExclusionsProcesses')), json('null'), parameters('windowsDefenderExclusionsPaths'))]"
                    },
                    "ScheduledScanSettings": {
                        "isEnabled": "true",
                        "scanType": "Full",
                        "day": "7",
                        "time": "120"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2015-06-15",
            "name": "[concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet')), '/DependencyAgentWindows')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachines",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet'))), 'WindowsDefender')]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Monitoring.DependencyAgent",
                "type": "DependencyAgentWindows",
                "typeHandlerVersion": "9.5",
                "autoUpgradeMinorVersion": true
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2017-12-01",
            "name": "[concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet')), '/MMAExtension')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "virtualMachines",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat('VM-', toUpper(parameters('environment')), '-', toUpper(parameters('usage')), '-', copyindex(parameters('vmSuffixOffSet'))), 'DependencyAgentWindows')]"
            ],
            "properties": {
                "publisher": "Microsoft.EnterpriseCloud.Monitoring",
                "type": "MicrosoftMonitoringAgent",
                "typeHandlerVersion": "1.0",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "workspaceId": "[reference(parameters('logAnalyticsWorkspace_Id'), '2015-03-20').customerId]",
                    "stopOnMultipleConnections": true
                },
                "protectedSettings": {
                    "workspaceKey": "[listKeys(parameters('logAnalyticsWorkspace_Id'), '2015-03-20').primarySharedKey]"
                }
            }
        }
    ],
    "outputs": {}
}